<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6333defe-3cc6-4549-8273-8b33ec98cd6b" name="Changes" comment="add sslmode=disable">
      <change afterPath="$PROJECT_DIR$/booking_service/.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/dtos/requests/create_rent_request.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/dtos/requests/get_rent_filter.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/dtos/requests/update_rent_request.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/dtos/responses/get_rent_response.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/dtos/responses/get_rents_response.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/internal/config/config.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/internal/db/db_connection.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/internal/errors/service_bad_request_error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/internal/rest/api_hotel.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/internal/rest/api_hotel_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/internal/server/common_configuration.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/internal/server/common_service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/booking_service/internal/services/booking_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/booking_service/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/booking_service/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/booking_service/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/booking_service/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/booking_service/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/booking_service/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/booking_service/internal/app/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/booking_service/internal/app/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/booking_service/internal/config/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/booking_service/internal/config/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/booking_service/internal/server/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/booking_service/internal/server/server.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="hotel-service" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;FismanMaxim&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/coolStory24/hsse_project_go&quot;,
    &quot;accountId&quot;: &quot;36783413-3e48-4db0-8aae-6b65a6eff630&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2pX97RA6vuiiEoreHBoWnR0D0qd" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.go build booking_service/cmd.executor": "Run",
    "Go Build.go build hotel_service/cmd.executor": "Run",
    "Go Test.TestCreateRent_InvalidBody_BadRequest in booking_service/internal/rest.executor": "Coverage",
    "Go Test.TestGetRentByIDHandler_InvalidRentID in booking_service/internal/rest.executor": "Coverage",
    "Go Test.TestGetRentByIDHandler_RentNotFound in booking_service/internal/rest.executor": "Debug",
    "Go Test.TestGetRentByIDHandler_ValidRentID in booking_service/internal/rest.executor": "Coverage",
    "Go Test.TestGetRents_CommonCaseWithSomeEmptyFields_Ok in booking_service/internal/rest.executor": "Coverage",
    "Go Test.TestGetRents_CommonCase_Ok in booking_service/internal/rest.executor": "Run",
    "Go Test.TestGetRents_FilterOutAllRents_ReturnEmptyRentsArray in booking_service/internal/rest.executor": "Run",
    "Go Test.TestUpdateRentHandler_ValidRequest_Ok in booking_service/internal/rest.executor": "Debug",
    "Go Test.go test booking_service/internal/rest.executor": "Coverage",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "feature/add-booking__service",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "D:/GoProjects/hsse_project_go",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\GoProjects\hsse_project_go\booking_service\internal" />
      <recent name="D:\GoProjects\hsse_project_go\hotel_service" />
      <recent name="D:\GoProjects\hsse_project_go\hotel_service\cmd" />
      <recent name="D:\GoProjects\hsse_project_go" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestGetRentByIDHandler_RentNotFound in booking_service/internal/rest">
    <configuration name="TestCreateRent_InvalidBody_BadRequest in booking_service/internal/rest" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="hsse_project_go" />
      <working_directory value="$PROJECT_DIR$/booking_service/internal/rest" />
      <root_directory value="$PROJECT_DIR$/booking_service" />
      <kind value="PACKAGE" />
      <package value="booking_service/internal/rest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCreateRent_InvalidBody_BadRequest\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetRentByIDHandler_InvalidRentID in booking_service/internal/rest" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="hsse_project_go" />
      <working_directory value="$PROJECT_DIR$/booking_service/internal/rest" />
      <root_directory value="$PROJECT_DIR$/booking_service" />
      <kind value="PACKAGE" />
      <package value="booking_service/internal/rest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetRentByIDHandler_InvalidRentID\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetRentByIDHandler_RentNotFound in booking_service/internal/rest" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="hsse_project_go" />
      <working_directory value="$PROJECT_DIR$/booking_service/internal/rest" />
      <root_directory value="$PROJECT_DIR$/booking_service" />
      <kind value="PACKAGE" />
      <package value="booking_service/internal/rest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetRentByIDHandler_RentNotFound\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetRentByIDHandler_ValidRentID in booking_service/internal/rest" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="hsse_project_go" />
      <working_directory value="$PROJECT_DIR$/booking_service/internal/rest" />
      <root_directory value="$PROJECT_DIR$/booking_service" />
      <kind value="PACKAGE" />
      <package value="booking_service/internal/rest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetRentByIDHandler_ValidRentID\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetRents_CommonCaseWithSomeEmptyFields_Ok in booking_service/internal/rest" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="hsse_project_go" />
      <working_directory value="$PROJECT_DIR$/booking_service/internal/rest" />
      <root_directory value="$PROJECT_DIR$/booking_service" />
      <kind value="PACKAGE" />
      <package value="booking_service/internal/rest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetRents_CommonCaseWithSomeEmptyFields_Ok\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestGetRentByIDHandler_RentNotFound in booking_service/internal/rest" />
        <item itemvalue="Go Test.TestGetRentByIDHandler_InvalidRentID in booking_service/internal/rest" />
        <item itemvalue="Go Test.TestGetRentByIDHandler_ValidRentID in booking_service/internal/rest" />
        <item itemvalue="Go Test.TestGetRents_CommonCaseWithSomeEmptyFields_Ok in booking_service/internal/rest" />
        <item itemvalue="Go Test.TestCreateRent_InvalidBody_BadRequest in booking_service/internal/rest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-5df93f7ad4aa-df9ad98b711f-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-242.22855.106" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-GO-242.22855.106" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="origin/feature/add-booking_service" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="add hotel service and tests" />
    <MESSAGE value="add env loading" />
    <MESSAGE value="add sslmode=disable" />
    <option name="LAST_COMMIT_MESSAGE" value="add sslmode=disable" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/booking_service/internal/rest/api_hotel_test.go</url>
          <line>360</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/hsse_project_go$TestGetRentByIDHandler_RentNotFound_in_booking_service_internal_rest.out" NAME="TestGetRentByIDHandler_RentNotFound in booking_service/internal/rest Coverage Results" MODIFIED="1732988529108" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hsse_project_go$TestGetRentByIDHandler_InvalidRentID_in_booking_service_internal_rest.out" NAME="TestGetRentByIDHandler_InvalidRentID in booking_service/internal/rest Coverage Results" MODIFIED="1732988508556" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hsse_project_go$TestGetRentByIDHandler_ValidRentID_in_booking_service_internal_rest.out" NAME="TestGetRentByIDHandler_ValidRentID in booking_service/internal/rest Coverage Results" MODIFIED="1732988487447" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hsse_project_go$go_test_booking_service_internal_rest.out" NAME="go test booking_service/internal/rest Coverage Results" MODIFIED="1732987876583" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hsse_project_go$TestCreateRent_InvalidBody_BadRequest_in_booking_service_internal_rest.out" NAME="TestCreateRent_InvalidBody_BadRequest in booking_service/internal/rest Coverage Results" MODIFIED="1732987978593" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/hsse_project_go$TestGetRents_CommonCaseWithSomeEmptyFields_Ok_in_booking_service_internal_rest.out" NAME="TestGetRents_CommonCaseWithSomeEmptyFields_Ok in booking_service/internal/rest Coverage Results" MODIFIED="1732988244778" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>